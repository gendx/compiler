// Generated by Bisonc++ V4.08.01

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "Parserbase.h"
// $insert scanner.h
#include "Scanner.h"

#include "concatstream.hpp"


#undef Parser
class Parser: public ParserBase
{
    PrependIstream mIstream;

    // $insert scannerobject
    Scanner d_scanner;
        
    public:
        explicit Parser(std::istream &in = std::cin, std::ostream &out = std::cout);
    
        int parse();
        AST ast();

    private:
        void error(char const *msg);    // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc

    // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup(bool recovery);
        void nextToken();
        void print__();
        void exceptionHandler__(std::exception const &exc);

        AST mAst;
};


inline AST Parser::ast()
{
    return mAst;
}


#endif
